/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI_.ratings;

import CONTROLLER_.C_Ratings;
import MODEL_.connectorDb;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author frans
 */
public class lihatRating extends javax.swing.JFrame {

    /**
     * Creates new form lihatRating
     */
    public lihatRating() {
        initComponents();
        this.setLocationRelativeTo(null);
        loadRatings_();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRatings = new javax.swing.JTable();
        btn_editRating = new javax.swing.JButton();
        btn_hapusRating = new javax.swing.JButton();
        btn_importDataRating = new javax.swing.JButton();
        brn_refresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(51, 255, 51));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setText("Ratings");

        tableRatings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRatings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRatingsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableRatings);

        btn_editRating.setText("Edit Rating");
        btn_editRating.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_editRatingMouseClicked(evt);
            }
        });

        btn_hapusRating.setBackground(new java.awt.Color(204, 0, 0));
        btn_hapusRating.setForeground(new java.awt.Color(255, 255, 255));
        btn_hapusRating.setText("Hapus Rating");
        btn_hapusRating.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_hapusRatingMouseClicked(evt);
            }
        });

        btn_importDataRating.setText("Import Data");
        btn_importDataRating.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_importDataRatingMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(btn_importDataRating)
                .addGap(164, 164, 164)
                .addComponent(btn_editRating)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE)
                .addComponent(btn_hapusRating)
                .addGap(40, 40, 40))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_editRating)
                    .addComponent(btn_importDataRating)
                    .addComponent(btn_hapusRating))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        brn_refresh.setText("ðŸ”ƒ Refresh");
        brn_refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                brn_refreshMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(brn_refresh)
                .addGap(42, 42, 42))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(brn_refresh)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableRatingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRatingsMouseClicked
        btn_editRating.setEnabled(true);
        btn_hapusRating.setEnabled(true);
    }//GEN-LAST:event_tableRatingsMouseClicked

    private void btn_editRatingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editRatingMouseClicked
        int userID= Integer.parseInt((String) tableRatings.getValueAt(tableRatings.getSelectedRow(), 0));
        String bookISBN = (String)tableRatings.getValueAt(tableRatings.getSelectedRow(), 1);
        
//        System.out.println(userID+","+bookISBN);
        new editRating(userID, bookISBN).setVisible(true);
    }//GEN-LAST:event_btn_editRatingMouseClicked

    private void btn_hapusRatingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_hapusRatingMouseClicked
        int userID= Integer.parseInt((String) tableRatings.getValueAt(tableRatings.getSelectedRow(), 0));
        String bookISBN = (String)tableRatings.getValueAt(tableRatings.getSelectedRow(), 1);
        
        int dialogResult = JOptionPane.showConfirmDialog(null, "Hapus data rating?", "Warning", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                System.out.println("PROCESSING...");
                new C_Ratings().hapus_Rating(bookISBN,userID);
                JOptionPane.showMessageDialog(null, "Data Dihapus");
                System.out.println("IDLE");
                loadRatings_();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "ERROR", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_hapusRatingMouseClicked

    private void brn_refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_brn_refreshMouseClicked
        loadRatings_();
    }//GEN-LAST:event_brn_refreshMouseClicked

    private void btn_importDataRatingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_importDataRatingMouseClicked
        new importRating().setVisible(true);
    }//GEN-LAST:event_btn_importDataRatingMouseClicked

    private void loadRatings_() {
        
        btn_editRating.setEnabled(false);
        btn_hapusRating.setEnabled(false);
        DefaultTableModel tblModel = new DefaultTableModel(new String[]{"USER ID", "ISBN", "BOOK ID", "RATING", "JUDUL BUKU"}, 0) {

            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };

        try {
            System.out.println("PROCESSING...");
            connectorDb koneksi = new connectorDb();
            Connection konek = koneksi.getConnection();

            Statement stmt = konek.createStatement();
            String query = "SELECT tabel_rating.book_id, tabel_rating.user_id, tabel_rating.book_isbn, tabel_rating.book_rating, tabel_buku.book_title "
                    + "FROM tabel_rating "
                    + "INNER JOIN tabel_user ON tabel_rating.user_id = tabel_user.user_id "
                    + "INNER JOIN tabel_buku ON tabel_rating.book_isbn = tabel_buku.book_isbn";
            ResultSet rs = stmt.executeQuery(query);

            while (rs.next()) {
                String user_id = rs.getString("user_id");
                String book_isbn = rs.getString("book_isbn");
                String book_rating = rs.getString("book_rating");
                String book_title = rs.getString("book_title");
                String book_id = rs.getString("book_id");
                tblModel.addRow(new Object[]{user_id, book_isbn,book_id, book_rating, book_title});

            }
            stmt.close();
            konek.close();
            System.out.println("IDLE");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERR..\n" + e.getMessage());

        }
        tableRatings.setModel(tblModel);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brn_refresh;
    private javax.swing.JButton btn_editRating;
    private javax.swing.JButton btn_hapusRating;
    private javax.swing.JButton btn_importDataRating;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableRatings;
    // End of variables declaration//GEN-END:variables
}
